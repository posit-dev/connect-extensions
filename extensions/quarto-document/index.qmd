---
title: Quarto Document
format:
  html:
    echo: false
---

Quarto enables you to weave together content and executable code into a
finished document. To learn more about Quarto see <https://quarto.org>.

## Workflow diagram

This diagram depicts a simple workflow showing the
[tidying](https://vita.had.co.nz/papers/tidy-data.html) and analysis of a data
set with written findings reviewed by your peers.

```{mermaid}
stateDiagram-v2
  direction LR

  [*] --> tidy
  tidy --> analyze
  analyze --> tidy
  analyze --> write
  write --> review
  review --> write: feedback
  review --> accepted
  accepted --> [*]
```

Your personal workflow may be more complicated than this example, but
thankfully, Quarto lets you include
[diagrams](https://quarto.org/docs/authoring/diagrams.html) to help you
communicate how you work!

## Penguins

Quarto documents can incorporate interactive data exploration and analysis.
One way of including these dynamic capabilities is by using [Observable
JS](https://quarto.org/docs/interactive/ojs/) (OJS).

This is a simple example based on Allison Horst's [Palmer
Penguins](https://allisonhorst.github.io/palmerpenguins/) dataset. Here we
look at how penguin body mass varies across both sex and species (use the
provided inputs to filter the dataset by bill length and island):

```{ojs}
// https://observablehq.com/@observablehq/sample-datasets
// https://allisonhorst.github.io/palmerpenguins/
filtered = penguins.filter(function(penguin) {
  return bill_length_min < penguin.culmen_length_mm &&
         islands.includes(penguin.island);
})
```

```{ojs}
//| panel: input

viewof bill_length_min = Inputs.range(
  [32, 50], 
  {value: 35, step: 1, label: "Bill length (min):"}
)
viewof islands = Inputs.checkbox(
  ["Torgersen", "Biscoe", "Dream"], 
  { value: ["Torgersen", "Biscoe"], 
    label: "Islands:"
  }
)
```

::: {.panel-tabset}


## Plot

```{ojs}
Plot.rectY(filtered, 
  Plot.binX(
    {y: "count"}, 
    {x: "body_mass_g", fill: "species", thresholds: 20}
  ))
  .plot({
    facet: {
      data: filtered,
      x: "sex",
      y: "species",
      marginRight: 80
    },
    marks: [
      Plot.frame(),
    ]
  }
)
```

## Data

```{ojs}
Inputs.table(filtered)
```

:::
